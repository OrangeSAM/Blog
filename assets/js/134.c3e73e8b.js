(window.webpackJsonp=window.webpackJsonp||[]).push([[134],{334:function(t,s,a){"use strict";a.r(s);var e=a(3),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("使用增长速度快")]),t._v(" "),a("ul",[a("li",[t._v("入门快")]),t._v(" "),a("li",[t._v("高并发")]),t._v(" "),a("li",[t._v("可实现高性能服务器")])]),t._v(" "),a("h2",{attrs:{id:"安装node-js-和-npm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装node-js-和-npm"}},[t._v("#")]),t._v(" 安装node.js 和 npm")]),t._v(" "),a("p",[t._v("在命令行（git bash或者cmd都行）中输入node -v验证系统中是否已安装node.js，Npm同理。")]),t._v(" "),a("p",[t._v("Npm是什么，为什么需要他，引用廖雪峰老师网站上的一段解释：")]),t._v(" "),a("blockquote",[a("p",[t._v("因为我们在Node.js上开发时，会用到很多别人写的JavaScript代码。如果我们要使用别人写的某个包，每次都根据名称搜索一下官方网站，下载代码，解压，再使用，非常繁琐。于是一个集中管理的工具应运而生：大家都把自己开发的模块打包后放到npm官网上，如果要使用，直接通过npm安装就可以直接用，不用管代码存在哪，应该从哪下载。")]),t._v(" "),a("p",[t._v("更重要的是，如果我们要使用模块A，而模块A又依赖于模块B，模块B又依赖于模块X和模块Y，npm可以根据依赖关系，把所有依赖的包都下载下来并管理起来。否则，靠我们自己手动管理，肯定既麻烦又容易出错。")])]),t._v(" "),a("h2",{attrs:{id:"模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块"}},[t._v("#")]),t._v(" 模块")]),t._v(" "),a("h2",{attrs:{id:"fs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fs"}},[t._v("#")]),t._v(" fs")]),t._v(" "),a("p",[t._v("fs是Node.js内置的文件系统模块，负责读写文件。")]),t._v(" "),a("h2",{attrs:{id:"stream"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stream"}},[t._v("#")]),t._v(" stream")])])}),[],!1,null,null,null);s.default=r.exports}}]);