(window.webpackJsonp=window.webpackJsonp||[]).push([[149],{349:function(s,n,a){"use strict";a.r(n);var e=a(3),t=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h3",{attrs:{id:"题目内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#题目内容"}},[s._v("#")]),s._v(" 题目内容")]),s._v(" "),a("p",[s._v("给定一个数组，它的第 i 个元素是一支给定股票第 i 天的价格。")]),s._v(" "),a("p",[s._v("如果你最多只允许完成一笔交易（即买入和卖出一支股票），设计一个算法来计算你所能获取的最大利润。")]),s._v(" "),a("p",[s._v("注意你不能在买入股票前卖出股票。")]),s._v(" "),a("p",[s._v("输入: [7,1,5,3,6,4]")]),s._v(" "),a("p",[s._v("输出: 5")]),s._v(" "),a("p",[s._v("解释: 在第 2 天（股票价格 = 1）的时候买入，在第 5 天（股票价格 = 6）的时候卖出，最大利润 = 6-1 = 5 。")]),s._v(" "),a("p",[s._v("注意利润不能是 7-1 = 6, 因为卖出价格需要大于买入价格。")]),s._v(" "),a("h3",{attrs:{id:"解法一-暴力法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解法一-暴力法"}},[s._v("#")]),s._v(" 解法一，暴力法")]),s._v(" "),a("p",[s._v("思路很简单，即是用两层循环将所有可能的交易算一遍，挨个比较每次交易的利润。每次比较都更新当前最大的利润（如果是的话），到最后即可得出给定周期内的最大利润。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var maxProfit = function(prices) {\n    let index = 0\n    let temp\n    for (let m = 0; m< prices.length;m++) {\n        for (n = m + 1; n < prices.length;n++) {\n            temp = prices[n] - prices[m] \n            if (temp > index) {\n                index = temp\n            }\n        }\n    }\n    return index\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h3",{attrs:{id:"解法二-动态历史低指比较法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解法二-动态历史低指比较法"}},[s._v("#")]),s._v(" 解法二，动态历史低指比较法")]),s._v(" "),a("p",[s._v("这个方法不是自己想出来的，是从题解区官方解法看到的。一开始还领会错了意思，我以为是用"),a("code",[s._v("min")]),s._v("方法找到最低值，然后一次循环找到最大利润。虽然现实生活中都想抄底，但题中由于是给定价格周期，且最低点后面的价格可能仍然较低，所以不一定买在低点就意味着最大盈利。以"),a("code",[s._v("[7,2,8,0,1]")]),s._v("为例，这里1是最低点，但如果以此计算利润的话只有1，而在2价买入8价卖出的话，利润有6。")]),s._v(" "),a("p",[s._v("所以这里有个思维上的误区，尽管简单（但我还是开心地跳进去了=_=）。")]),s._v(" "),a("h5",{attrs:{id:"错误代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#错误代码"}},[s._v("#")]),s._v(" 错误代码")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var maxProfit = function(prices) {\n    let minVal = Math.min(...prices)\n    let minIndex = prices.indexOf(minVal)\n    if (minIndex === prices.length - 1) {\n        // 处理地点在末尾的情况\n        prices.pop()\n        minVal = Math.min(...prices)\n        minIndex = prices.indexOf(minVal)\n    }\n    \n    let temp  = 0\n    for(let i = minIndex; i < prices.length; i ++) {\n        if ((prices[i] - minVal) > temp) {\n            temp = prices[i] - minVal\n        }\n    }\n    return temp\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("p",[s._v("正确的思路应该是，历史最低点应该是动态的值，应该比较每个卖点与历史最低点的利润来得到最大利润。")]),s._v(" "),a("p",[s._v("假定当前项是历史最低点，计算此历史最低点与其后的卖点利润，直到下一次历史最低点出现再计算。")]),s._v(" "),a("h5",{attrs:{id:"正确代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正确代码"}},[s._v("#")]),s._v(" 正确代码")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var maxProfit = function(prices) {\n    let valley = Number.MAX_SAFE_INTEGER;\n    let max = 0;\n    for(var i = 0;i < prices.length;i++){\n        if(prices[i] < valley){\n            valley = prices[i];\n        }else{\n            max = Math.max(max,prices[i] - valley);\n        }\n    }\n    return max;\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);