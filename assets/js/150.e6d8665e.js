(window.webpackJsonp=window.webpackJsonp||[]).push([[150],{350:function(n,s,a){"use strict";a.r(s);var t=a(3),e=Object(t.a)({},(function(){var n=this,s=n.$createElement,a=n._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h3",{attrs:{id:"题目内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#题目内容"}},[n._v("#")]),n._v(" 题目内容")]),n._v(" "),a("p",[n._v("罗马数字包含以下七种字符: I， V， X， L，C，D 和 M。他们都有对应的阿拉伯数字：I => 1 , V => 5, X => 10,L => 50, C => 100, D => 500, M => 1000 。")]),n._v(" "),a("p",[n._v("例如， 罗马数字 2 写做 II ，即为两个并列的 1。12 写做 XII ，即为 X + II 。 27 写做  XXVII, 即为 XX + V + II 。")]),n._v(" "),a("p",[n._v("通常情况下，罗马数字中小的数字在大的数字的右边。但也存在特例，例如 4 不写做 IIII，而是 IV。数字 1 在数字 5 的左边，所表示的数等于大数 5 减小数 1 得到的数值 4 。同样地，数字 9 表示为 IX。这个特殊的规则只适用于以下六种情况：")]),n._v(" "),a("p",[n._v("I 可以放在 V (5) 和 X (10) 的左边，来表示 4 和 9。\nX 可以放在 L (50) 和 C (100) 的左边，来表示 40 和 90。\nC 可以放在 D (500) 和 M (1000) 的左边，来表示 400 和 900。\n给定一个罗马数字，将其转换成整数。输入确保在 1 到 3999 的范围内。")]),n._v(" "),a("p",[n._v("看完题目觉得不难，只需要处理映射关系和累加就好了。罗马的数字都是代表大数字的字符写在左边，而唯一需要另外处理的情况是比各种大数小一个单位的情况，比如400。而为什么先人们只对小一个单位进行处理。我觉得是，大一个两个单位或者三个单位都有相应字符可以处理，而虽然大四个单位也能处理，但未免使得整个字符显得臃肿。")]),n._v(" "),a("h3",{attrs:{id:"解法一-我的解法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解法一-我的解法"}},[n._v("#")]),n._v(" 解法一，我的解法")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("var romanToInt = function(s) {\n    let map = {\n        I: 1,\n        V: 5,\n        X: 10,\n        L: 50,\n        C: 100,\n        D: 500,\n        M: 1000\n    }\n    let toArr = s.split(\"\")\n    // 最终结果\n    let count = 0\n    toArr.forEach((e, i) => {\n        if (((e === 'I') || (e === 'X') || (e === 'C')) && (map[e] < map[toArr[i+1]])) {\n            switch(e) {\n                case 'I' :\n                    count = count - 1\n                    break;\n                case 'X' :\n                    count = count - 10\n                    break;\n                case 'C' :\n                    count = count - 100\n            }\n        } else {\n            count =  count + map[e]\n        }\n    })\n    return count\n};\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br")])]),a("p",[n._v("代码中除了"),a("code",[n._v("(map[e] < map[toArr[i+1]])")]),n._v("这个判断条件需要想明白外，其他部分应该都不难。这个条件处理的就是表示小一个单位的字符。")])])}),[],!1,null,null,null);s.default=e.exports}}]);