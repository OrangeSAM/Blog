(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{310:function(e,n,t){"use strict";t.r(n);var v=t(3),r=Object(v.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("p",[e._v("JavaScript拥有动态类型，这意味着相同的变量可用作不同的类型\n声明string变量时，可以用单引号也可以用双引号\n声明number类型时，极大或极小的数值可以使用科学计数法表示")]),e._v(" "),t("p",[e._v("八进制字面量在严格模式下是无效的，会导致支持该模式的JavaScript引擎抛出错误；\n第一位必须是0，然后是八进制数字序列，如果字面的数值超过了范围，那么前导数值零将被忽略，后面的数值将被当做十进制解析\n十六进制字面值的前两位必须是0x\n可以使用科学计数法，用E或e表示\n在使用浮点数时尽量不进行数据的比较，0.1 和0.2这俩个奇葩\nnumber的数值是有范围的")]),e._v(" "),t("p",[e._v("https://mp.weixin.qq.com/s?__biz=MzIzMzYwNzY2NQ==&mid=2247483766&idx=1&sn=ecbb1eb9aa47e0f9f2098d9c9620dd94&chksm=e88259e8dff5d0fed8f6f61047148c70d0067e2e719b9d0cdcb77bf8a04e4ce1cb3cf7a87d60#rd\vjs浮动数精度问题\n如何避开JavaScript浮点数计算精度问题（如0.1+0.2!==0.3） - CSDN博客\nhttps://blog.csdn.net/u013347241/article/details/79210840")]),e._v(" "),t("p",[e._v("值类型，可操作保存在变量中的实际的值\n当复制保存着对象的某个变量时，操作的是对象的引用，但在为对象添加属性时，操作的是实际的对象，引用类型值指那些可能为多个值构成的对象")]),e._v(" "),t("p",[e._v("引用类型是一种数据结构，用于将数据和功能组织在一起，引用类型有时候也被称为对象定义，因为他们描述的是一类对象所具有的属性和方法")]),e._v(" "),t("p",[e._v("undefined类型只有一个值，即undefined,当声明的变量未初始化时，该变量的默认值是undefined")]),e._v(" "),t("p",[e._v("当函数无明确返回值时，返回的也是值undefined")]),e._v(" "),t("p",[e._v("如果函数或方法要返回的是对象，当找不到对象时，返回的通常是null")]),e._v(" "),t("p",[e._v("所有程序设计语言最重要的特征之一是具有进行类型的能力")]),e._v(" "),t("p",[e._v("Number类型的toString()，他有两种模式，默认模式和基模式")]),e._v(" "),t("p",[e._v("Number(true)返回1")]),e._v(" "),t("p",[e._v("引用类型通常叫做类 class，也就是说，遇到引用值，所处理的就是对象\n在Boolean 表达式中，所有对象都会被自动转换为true")]),e._v(" "),t("p",[e._v("使用 new 操作符创建的引用类型的实例，在执行流离开当前作用域之前都一直保存在内存中。而自动创建的基本包装类型的对象，则只存在于一行代码的执行瞬间，然后立即被销毁")]),e._v(" "),t("p",[e._v("来自 "),t("a",{attrs:{href:"https://www.cnblogs.com/ljuyi/p/6100071.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.cnblogs.com/ljuyi/p/6100071.html"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("在涉及加法运算符(+)的数字和字符串表达式中，JavaScript 会把数字值转换为字符串。而其他运算符不会")])])}),[],!1,null,null,null);n.default=r.exports}}]);