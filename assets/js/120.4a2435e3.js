(window.webpackJsonp=window.webpackJsonp||[]).push([[120],{319:function(n,s,a){"use strict";a.r(s);var e=a(3),r=Object(e.a)({},(function(){var n=this,s=n.$createElement,a=n._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h2",{attrs:{id:"函数默认参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数默认参数"}},[n._v("#")]),n._v(" 函数默认参数")]),n._v(" "),a("p",[n._v("在ES5的时候，对于函数参数的默认处理一般如下\nfunction fn(a,b){\nb = b || 0\n当b不为falsy 值，省略了使用if判断的步骤\nreturn a+b\n}")]),n._v(" "),a("p",[n._v("ES6的写法，直接在参数的位置赋值默认参数\nfunction fn(a=0, b=0)\n如果参数是数组，每次的数组不是同一个")]),n._v(" "),a("h2",{attrs:{id:"剩余参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#剩余参数"}},[n._v("#")]),n._v(" 剩余参数")]),n._v(" "),a("p",[n._v("在ES5的时候，如果不知道参数的数量，只能利用arguments伪数组（原型指向Object）进行判断获取。\nfunction sum(message) {\nlet result = 0\nfor (let I = 0; i< arguments.length;i++) {\nresult += arguments[i]\n}\nreturn message + result\n}\nsum('结果是', 1,2,3,4,5,6,7,8,9)\nES5中把伪数组变成真数组的的1个方法\nLet args = Array.prototype.slice.call(arguments)\nES6中的两个方法\nLet  args = Array.from(arguments)\nLet args =[…arguments]\nES6的解决方法，因为arguments只是伪数组，并没有数组类型丰富的方法\nfunction sum(message, …numbers) {\nlet result = 0\nresult = numbers.reduce((p,v)=> p+v,0)\nreturn message + result\n}\nSum('结果是',1,2,3,4,5,6)")]),n._v(" "),a("h2",{attrs:{id:"展开操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#展开操作"}},[n._v("#")]),n._v(" 展开操作")]),n._v(" "),a("p",[n._v("Var arr1=[1,2,3,4,5]\nVar [a, b, c,…arr2] = arr1 // arr2=[4,5]\n更简单的形式[,,,…arr2] // arr2=[4,5]\n还可以这样操作\nVar arr3= [0, …arr1, 7]")]),n._v(" "),a("h2",{attrs:{id:"解构赋值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解构赋值"}},[n._v("#")]),n._v(" 解构赋值")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("Let a=1, b=2\n[a,b]=[b,a]//完成交换\n\nVar sam ={name: 'frank', age: 18,gender: 'male'}\n// ES5时代的写法\n// var name = frank.name\n// var age = frank.age\n// var gender = frank.gender\n// ES6的写法\nVar {name, age, gender} = frank\n\n// 默认参数和解构赋值的结合使用\nVar [a=5, b=7] =[1, 2]\n\n// 函数返回值\nVar f = function () {\n\tReturn [1,2,3]\n}\nVar [a,  ,b] = f()\n//嵌套的对象\nVar frank = {\n\tName: 'jack', age: 18, gender: 'male',\n\tChild: {\n\t\tName: 'tom',\n\t\tAge: 1,\n\t\tGender: 'male'\n\t}\n}\nVar {child:{name}} = frank // tom\n//综合运用\nvar frank = {\n\tname: 'jack',\n\tage: 18,\n\tgender: 'male',\n\tchild: {\n\t\t\tname: 'jerry',\n\t\t\tage: 1,\n\t\t\tgender: 'male'\n\t\t\t}\n\t}\nvar {child: {name:xingming='tom',age,gender}} = frank\nconsole.log(xingming) // jerry\n// 浅拷贝\nLet objA = {\n\tName: {\v x:a\n\t}\n}\nLet objB = {…objA}\n//对象合并\nLet objA = {\n\tP1:1,\n\tP2:2\n}\nLet objC = {\n\tP1:111,\n\tP3:3\n}\nLet objB = Object.assign({},objA, objC)//不那么方便的写法\nLet objB = {…objA, …objC}\nConsole.log(objB)\n// 对象属性增强\nVar x =1\nVar y=2\nVar obj = {x,y}\n\nVar obj ={x:1, y:2}\nVar {x,y} = obj\n\n\n//给对象赋值\nVar key = 'x'\nVar value = 'y'\n\nVar obj = {\n\t\"key\":value //错的,这样key只是字符串，读不到x\n}\nVar obj = {}\nObj[key] = value\nES6\nVar obj = {\n\t[ley] :value //用中括号\n}\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br"),a("span",{staticClass:"line-number"},[n._v("52")]),a("br"),a("span",{staticClass:"line-number"},[n._v("53")]),a("br"),a("span",{staticClass:"line-number"},[n._v("54")]),a("br"),a("span",{staticClass:"line-number"},[n._v("55")]),a("br"),a("span",{staticClass:"line-number"},[n._v("56")]),a("br"),a("span",{staticClass:"line-number"},[n._v("57")]),a("br"),a("span",{staticClass:"line-number"},[n._v("58")]),a("br"),a("span",{staticClass:"line-number"},[n._v("59")]),a("br"),a("span",{staticClass:"line-number"},[n._v("60")]),a("br"),a("span",{staticClass:"line-number"},[n._v("61")]),a("br"),a("span",{staticClass:"line-number"},[n._v("62")]),a("br"),a("span",{staticClass:"line-number"},[n._v("63")]),a("br"),a("span",{staticClass:"line-number"},[n._v("64")]),a("br"),a("span",{staticClass:"line-number"},[n._v("65")]),a("br"),a("span",{staticClass:"line-number"},[n._v("66")]),a("br"),a("span",{staticClass:"line-number"},[n._v("67")]),a("br"),a("span",{staticClass:"line-number"},[n._v("68")]),a("br"),a("span",{staticClass:"line-number"},[n._v("69")]),a("br"),a("span",{staticClass:"line-number"},[n._v("70")]),a("br"),a("span",{staticClass:"line-number"},[n._v("71")]),a("br"),a("span",{staticClass:"line-number"},[n._v("72")]),a("br"),a("span",{staticClass:"line-number"},[n._v("73")]),a("br"),a("span",{staticClass:"line-number"},[n._v("74")]),a("br"),a("span",{staticClass:"line-number"},[n._v("75")]),a("br"),a("span",{staticClass:"line-number"},[n._v("76")]),a("br"),a("span",{staticClass:"line-number"},[n._v("77")]),a("br"),a("span",{staticClass:"line-number"},[n._v("78")]),a("br"),a("span",{staticClass:"line-number"},[n._v("79")]),a("br"),a("span",{staticClass:"line-number"},[n._v("80")]),a("br"),a("span",{staticClass:"line-number"},[n._v("81")]),a("br"),a("span",{staticClass:"line-number"},[n._v("82")]),a("br")])])])}),[],!1,null,null,null);s.default=r.exports}}]);