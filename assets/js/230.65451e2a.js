(window.webpackJsonp=window.webpackJsonp||[]).push([[230],{431:function(s,t,a){"use strict";a.r(t);var n=a(3),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("调试Bug不是太难的事，更难的事是取名字，而如何取好一个名字就显得尤为重要。在Vue中，有多处涉及到组件名称的使用，各处的风格有框架内的既定要求。")]),s._v(" "),a("h2",{attrs:{id:"缘由"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缘由"}},[s._v("#")]),s._v(" 缘由")]),s._v(" "),a("p",[s._v("写这篇的缘由是之前在编写UI库的时候，遇到了引入组件时名称不规范的问题。")]),s._v(" "),a("p",[s._v("在写测试用例时，有个测试用例一直无法通过，但是来回看了很多遍代码逻辑和实例使用都没有问题，唯独报了个组件名称错误，改动后再测试，果然如此。\n在单文件组件中局部注册组件时，没有安装规范取名，而正确的应该是"),a("code",[s._v("import WIcon from './icon'")])]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Wicon "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./icon'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("components")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("Wicon"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("上面代码在语法上虽然没有问题，但是在使用会有问题，如果在template中像这样使用引入的组件"),a("code",[s._v("<w-icon>")]),s._v("，\n测试用例是会报错的。")]),s._v(" "),a("div",{staticClass:"language-shell script line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("vue warn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" unknown custom element "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("w-icon"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(", did you resgister the components correctly?\nFor recursive components "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v(" sure to provide the "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"name"')]),s._v(" option\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://i.loli.net/2020/07/05/hoAviT1rZstkxOE.png",alt:""}})]),s._v(" "),a("h2",{attrs:{id:"官方建议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#官方建议"}},[s._v("#")]),s._v(" 官方建议")]),s._v(" "),a("p",[s._v("阅读了Vue文档中有关组件名的要求和建议后，罗列要点如下：")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("组件名称中的两种风格")]),s._v(" "),a("p",[s._v("组件名需要为多个单词（字母全小写且必须包含一个连字符，根组件以及"),a("code",[s._v("<transition>``<component>")]),s._v("之类的Vue内置组件除外）。这样做可以\n避免跟现有的以及未来的HTML元素向冲突，因为所有的HTML元素名称都是单个单词的。")]),s._v(" "),a("p",[s._v("a. "),a("strong",[s._v("kebab-case")]),s._v("(短横线)(烤肉串)")]),s._v(" "),a("p",[s._v("用短横线串联起各单词（是不是很有烤肉串的感觉），定义时使用kebab风格，在使用的时候也必须是kebab风格。\n比如注册时"),a("code",[s._v("Vue.component('my-component-name', { /* ... */ })")]),s._v(", 使用时"),a("code",[s._v("<my-component-name>")]),s._v("。")]),s._v(" "),a("p",[s._v("b. "),a("strong",[s._v("PascalCase")]),s._v("(单词首字母大写)")]),s._v(" "),a("p",[s._v("使用Pascal风格定义组件时，使用时两种命名风格都可以使用。比如注册时"),a("code",[s._v("Vue.component('MyComponentName', { /* ... */ })")]),s._v("，\n使用则"),a("code",[s._v("<my-component-name>")]),s._v(" 和 "),a("code",[s._v("<MyComponentName>")]),s._v("都可以。但是，如果直接在DOM(不是单文件组件中的"),a("code",[s._v("<template>")]),s._v(")中使用时只有kebab-case是有效的。\n这一点，即便我们很少直接HTML中使用组件，但还是要注意下。(经测试，不会报错，但无法渲染对应组件)")]),s._v(" "),a("p",[s._v("在局部注册时，对于 components 对象中的每个 property 来说，其 property 名就是自定义元素的名字，其 property 值就是这个组件的选项对象。")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[s._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Vue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("el")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'#app'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("components")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[s._v("'component-a'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" ComponentA"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[s._v("'component-b'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" ComponentB\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("但在使用用ES6之后，一般都是直接写成：")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[s._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Vue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("el")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'#app'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("components")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("ComponentA"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ComponentB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("项目中和组件名称相关的几个地方，新建组件时Option中的name、注册组件时组件的名称、在使用组件时的标签名、在Vue Devtools中查看组件结构时的组件名称。")]),s._v(" "),a("p",[s._v("以button组件为例，在入口文件中注册的w-button, 是供在template里使用组件时编写的。而在组件内部声明的name, 可以在vue-devtools中看到组件的名称，可以用来标识组件，但并非唯一。")])]),s._v(" "),a("li",[a("p",[s._v("对于标签名称的编写")]),s._v(" "),a("p",[s._v("官方文档中风格指南里强烈推荐的写法是：")]),s._v(" "),a("p",[s._v("a. "),a("strong",[s._v("在单文件组件、字符串模板和JSX中没有内容的组件应该是自闭合的，但在DOM模板里永远不要这样做。")]),s._v(" 因为HTML\n并不支持自闭合的元素（除了官方的空元素）。")]),s._v(" "),a("p",[s._v("b. "),a("strong",[s._v("对于绝大多数项目来说，在单文件组件和字符串模板中组件名应该是PascalCase的，但是在DOM模板中总是kebab-case的。")])]),s._v(" "),a("p",[s._v("即如下是推荐的写法")]),s._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("\x3c!-- 在单文件组件、字符串模板和 JSX 中 --\x3e")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("MyComponent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("/>")])]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("\x3c!-- 在 DOM 模板中 --\x3e")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("my-component")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("my-component")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("prop的风格")]),s._v(" "),a("p",[a("strong",[s._v("在声明prop的时候，其命名应该始终使用camelCase，而在模板和JSX中应该始终使用kebab-case")]),s._v("。在JavaScript中更自然的是camelCase，\n而在HTML中则是kebab-case。")]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[s._v("    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("props")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("isShow")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n       "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Boolean       \n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[s._v(" "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("Dialog")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("is-show")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("false"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])]),s._v(" "),a("p",[s._v("vue 采用 HTML 语法，即不允许自闭合，所以当自己编写 input 组件时， 使用"),a("code",[s._v("<w-input />")]),s._v("会出现 bug。\n组件中的 name 可写可不写？写了能在 vue 开发者工具中看到对应的标签名。")])])}),[],!1,null,null,null);t.default=e.exports}}]);