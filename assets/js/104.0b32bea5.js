(window.webpackJsonp=window.webpackJsonp||[]).push([[104],{303:function(n,e,r){"use strict";r.r(e);var i=r(3),t=Object(i.a)({},(function(){var n=this,e=n.$createElement,r=n._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[r("p",[n._v("var new_array=arr.filter(callback(element,index,array),thisarg)\nelement 当前在数组中处理的元素\nindex 正在处理元素在数组中的索引\narray 调用了filter的数组\nthisarg 执行callback时的用于this的值")]),n._v(" "),r("p",[n._v("callback 用来测试数组的每个元素的函数。调用时使用参数（element index array）\n返回true表示保留该元素，false则不保留。")]),n._v(" "),r("p",[n._v("filter会把返回truede 元素放到一个新数组中，不会改变原数组")]),n._v(" "),r("p",[n._v("数组中搜索\nvar fruits = ['apple', 'banana', 'grapes', 'mango', 'orange'];\nfunction filterItems(query) {\nreturn fruits.filter(function(el) {\nreturn el.toLowerCase().indexOf(query.toLowerCase()) > -1;\n})\n}")]),n._v(" "),r("p",[n._v("console.log(filterItems('ap')); // ['apple', 'grapes']\nconsole.log(filterItems('an')); // ['banana', 'mango', 'orange']")]),n._v(" "),r("p",[n._v("数组中的筛选\nvar arr = [  { id: 15 },  { id: -1 },  { id: 0 },  { id: 3 },  { id: 12.2 },  { },  { id: null },{ id: NaN },{ id: 'undefined' }\n];\nvar invalidEntries = 0;")]),n._v(" "),r("p",[n._v("function isNumber(obj) {\nreturn obj !== undefined && typeof(obj) === 'number' && !isNaN(obj);\n}\nfunction filterByID(item) {\nif (isNumber(item.id) && item.id !== 0) {\nreturn true;\n}\ninvalidEntries++;\nreturn false;\n}\nvar arrByID = arr.filter(filterByID);")]),n._v(" "),r("p",[n._v("console.log('Filtered Array\\n', arrByID);\n// Filtered Array\n// [{ id: 15 }, { id: -1 }, { id: 3 }, { id: 12.2 }]\nconsole.log('Number of Invalid Entries = ', invalidEntries);\n// Number of Invalid Entries = 5")])])}),[],!1,null,null,null);e.default=t.exports}}]);