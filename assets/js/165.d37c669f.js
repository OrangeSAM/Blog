(window.webpackJsonp=window.webpackJsonp||[]).push([[165],{367:function(s,n,a){"use strict";a.r(n);var e=a(3),t=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h3",{attrs:{id:"题目内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#题目内容"}},[s._v("#")]),s._v(" 题目内容")]),s._v(" "),a("p",[s._v("判断一个整数是否是回文数。回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。")]),s._v(" "),a("h3",{attrs:{id:"解法一-我的解法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解法一-我的解法"}},[s._v("#")]),s._v(" 解法一，我的解法")]),s._v(" "),a("p",[s._v("先将输入转换为字符串并处理为数组且倒转，如果倒转后的字符串等于倒转前，那么即可认为该数为回文数。")]),s._v(" "),a("p",[s._v("但这个方法特别容易想到，那么他的效率肯定不是最高的。最多人走的路，很大可能不是最顺畅的那条。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var isPalindrome = function(x) {\n    let returnVal = false\n    let val = String(x).split('').reverse()\n    let valCopy = String(x)\n    if (val.join('') === valCopy) {\n        return true\n    } else {\n        return false\n    }   \n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("在浏览各种leetcode相关仓库时，偶然翻到这个答案。虽然我们思路一样，但明显以下代码简洁得多，学习了。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var isPalindrome = function(x) {\n    return x.toString() == x.toString().split('').reverse().join('');\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"解法二-巧取法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解法二-巧取法"}},[s._v("#")]),s._v(" 解法二，巧取法")]),s._v(" "),a("p",[s._v("观察回文数，会发现其有个特点即是对称，首尾的数字是一样的，倒数第一个数字和倒数第二个数字是一样的...\n一旦发现对称位置的数字不一样即可判定为false。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var isPalindrome = function(x) {\n    if(x<0) return false;\n    let flag = true;\n    x = x.toString()\n\n    for(let i=0, len=x.length; i<len/2; i++){\n        if(x[i] !== x[len-1-i]){\n            flag = false;\n            break\n        }\n    }\n    return flag\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);