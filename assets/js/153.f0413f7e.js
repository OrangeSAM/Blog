(window.webpackJsonp=window.webpackJsonp||[]).push([[153],{354:function(s,n,a){"use strict";a.r(n);var e=a(3),t=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h3",{attrs:{id:"题目内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#题目内容"}},[s._v("#")]),s._v(" 题目内容")]),s._v(" "),a("p",[s._v("给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串，判断字符串是否有效。")]),s._v(" "),a("p",[s._v("有效字符串需满足：左括号必须用相同类型的右括号闭合。左括号必须以正确的顺序闭合。")]),s._v(" "),a("p",[a("code",[s._v("()[]{}")]),s._v("，"),a("code",[s._v("([{}])")]),s._v("，"),a("code",[s._v("((){[]})")]),s._v("，这些都是true。")]),s._v(" "),a("p",[s._v("第一遍看完题没有清晰的思路。看完示例后想的是，应该主要有两种有效的类别，一是像这样的"),a("code",[s._v("([{}])")]),a("strong",[s._v("嵌套对称")]),s._v("，二是像这样的"),a("code",[s._v("{}[]")]),a("strong",[s._v("紧挨对称")]),s._v("。")]),s._v(" "),a("p",[s._v("但同时对于这种形式"),a("code",[s._v("{()[{}]}")]),s._v("的是否符合对称要求也抱有疑问，便先处理前两种类别的。")]),s._v(" "),a("p",[s._v("处理完发现就是在有疑问的那类case里卡住了。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2020/03/10/auY8sb7L4RyGj6x.png",alt:""}})]),s._v(" "),a("h3",{attrs:{id:"错误解答"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#错误解答"}},[s._v("#")]),s._v(" 错误解答")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var isValid = function(s) {\n    if(s.length % 2 === 1 || s.length === 1) {\n        return false\n    }\n    let map = {\n        ')' : '(',\n        ']' : '[',\n        '}' : '{'\n    }\n    if (map[s[1]] === s[0]) {\n        // 紧挨对称\n        for (let i = 0; i < s.length - 1;) {\n            if (map[s[i + 1]] === s[i] ) {\n                // 加2是因为紧挨对称是以组的形式出现\n                i = i + 2\n            } else {\n                return false\n            }\n        }\n        return true\n    } else if (s[0] === map[s[s.length - 1]]){\n        // 嵌套对称\n        for(let i = 0; i < s.length / 2;) {\n            // 判断与对称点位置的元素是否匹配\n            if (s[i] === map[s[s.length - 1 - i]]) {\n                i ++ \n            } else {\n                return false\n            }\n        }\n        return true\n    }\n    return false\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br")])]),a("h3",{attrs:{id:"官方解法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#官方解法"}},[s._v("#")]),s._v(" 官方解法")]),s._v(" "),a("p",[s._v("上午的思路走不下去之后，也没想到更好的法子，只好去看官方解法。看完拍手叫好，思路很清晰，实现所需的代码也很简单。")]),s._v(" "),a("p",[s._v("实现完后一看，应该刷题以来最好看的击败率，但这个击败率其实是不稳定的。其中原因也求证过LeetCode内部人员，原话是：")]),s._v(" "),a("blockquote",[a("p",[s._v("服务器跑的时候根据负载，时间会有差别，测试集越少越明显。")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://i.loli.net/2020/03/10/s1hebpKmQ7NUDg2.png",alt:""}})]),s._v(" "),a("p",[s._v("官方解法在网站从开始到最后分析了很多，简单来说就是：用栈来存储目前遇到的左括号，一旦遇到与已有左括号匹配的右括号，就将左括号出栈。自然理想的情况是循环完一遍，栈里面没有剩下元素。")]),s._v(" "),a("p",[s._v("反之，如果有，则意味着存在不匹配的括号。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var isValid = function(s) {\n    if(s.length % 2 === 1 || s.length === 1) {\n        return false\n    }\n    let arr = []\n    let map = {\n        '(' : ')',\n        '[' : ']',\n        '{' : '}'\n    }\n    for (let i = 0; i < s.length;) {\n        if (s[i] in map) {\n            arr.push(s[i])\n        } else if (s[i] === map[arr[arr.length - 1]]){\n            arr.pop()\n        }\n        i++\n    }\n    return arr.length > 0 ? false : true\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])]),a("h3",{attrs:{id:"思路清奇的解法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#思路清奇的解法"}},[s._v("#")]),s._v(" 思路清奇的解法")]),s._v(" "),a("p",[s._v("这个解法是中国站"),a("a",{attrs:{href:"https://leetcode-cn.com/problems/valid-parentheses/solution/javascript-you-xiao-de-gua-hao-by-rhinoc/",target:"_blank",rel:"noopener noreferrer"}},[s._v("rhinoc"),a("OutboundLink")],1),s._v("同学提供的，看完必须拍大腿。")]),s._v(" "),a("p",[s._v("这个解法是针对所有给到的测试用例至少都会有一组紧挨对称的括号(如"),a("code",[s._v("[{}]")]),s._v(")。那每一次循环将紧挨对称的括号去除掉，到最后理想的情况就如官方解法一样，没有剩下的括号元素。")]),s._v(" "),a("p",[s._v("这个解法的代码也很简洁，但可能因为replace的原因，时间复杂度和空间复杂度效果都不是很好。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var isValid = function (s) {\n    while (s.length) {\n        var temp = s;\n        s = s.replace('()', '');\n        s = s.replace('[]', '');\n        s = s.replace('{}', '');\n        if (s == temp) return false\n    }\n    return true;\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);